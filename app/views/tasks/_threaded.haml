.thread{ :id => "thread_task_#{task.id}" }
  .title
    - task_list = task.task_list
    - project = task.task_list.project
    .task{ :id => task_id(:task,project,task), :class => task_classes(task)}
      = #%span.status
      = #task_status(task,:header)
      %strong
        Task:
      %span.task_list
        = link_to task.task_list, project_task_list_path(task.project, task.task_list)
        &rarr;
      = link_to task.name, project_task_list_task_path(project,task_list,task), :class => 'name'
      - unless (task.due_on.nil? && task.unassigned?) || task.closed?
        %span.assigned
          = due_on(task) if task.due_on
          = "-" unless task.assigned.nil? || task.due_on.nil?
          = link_to task.assigned.short_name, user_path(task.assigned.user) if task.assigned
      %span.project
        in
        = link_to task.project, project_path(task.project)

  .comments
    - for comment in task.comments.reverse
      = render :partial => 'comments/threaded', :locals => { :comment => comment }

  .link
    = link_to "Go to the task '#{task}'...", project_task_list_task_path(project,task_list,task)